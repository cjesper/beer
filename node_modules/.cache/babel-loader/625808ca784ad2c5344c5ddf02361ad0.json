{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/extends\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/objectWithoutPropertiesLoose\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime-corejs2/helpers/inheritsLoose\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Button = _interopRequireDefault(require(\"./Button\"));\n\nvar propTypes = {\n  /**\n   * The `<input>` `type`\n   * @type {[type]}\n   */\n  type: _propTypes.default.oneOf(['checkbox', 'radio']),\n\n  /**\n   * The HTML input name, used to group like checkboxes or radio buttons together\n   * semantically\n   */\n  name: _propTypes.default.string,\n\n  /**\n   * The checked state of the input, managed by `<ToggleButtonGroup>`` automatically\n   */\n  checked: _propTypes.default.bool,\n\n  /**\n   * The disabled state of both the label and input\n   */\n  disabled: _propTypes.default.bool,\n\n  /**\n   * [onChange description]\n   */\n  onChange: _propTypes.default.func,\n\n  /**\n   * The value of the input, and unique identifier in the ToggleButtonGroup\n   */\n  value: _propTypes.default.any.isRequired\n};\n\nvar ToggleButton =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(ToggleButton, _React$Component);\n\n  function ToggleButton() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ToggleButton.prototype;\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        name = _this$props.name,\n        checked = _this$props.checked,\n        type = _this$props.type,\n        onChange = _this$props.onChange,\n        value = _this$props.value,\n        props = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"children\", \"name\", \"checked\", \"type\", \"onChange\", \"value\"]);\n    var disabled = props.disabled;\n    return _react.default.createElement(_Button.default, (0, _extends2.default)({}, props, {\n      active: !!checked,\n      componentClass: \"label\"\n    }), _react.default.createElement(\"input\", {\n      name: name,\n      type: type,\n      autoComplete: \"off\",\n      value: value,\n      checked: !!checked,\n      disabled: !!disabled,\n      onChange: onChange\n    }), children);\n  };\n\n  return ToggleButton;\n}(_react.default.Component);\n\nToggleButton.propTypes = propTypes;\nvar _default = ToggleButton;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","map":null,"metadata":{},"sourceType":"script"}